- name: "Create Dev user and tenant"
  shell: |
    source {{ openrc }} 
    openstack project show Dev
    if [ $? -ne 0 ];  then
      openstack project create --description "Dev" Dev
    fi
    openstack user show Dev
    if [ $? -ne 0 ];  then
      openstack user create --password default Dev
      openstack user set --project=Dev Dev
    fi
    openstack role add --user Dev --project Dev admin

- name: "copy rcfile to neutron servers"
  shell: |
    cp {{ openrc }} /tmp/rcfile

- set_fact:
    admin_openrc: "{{ openrc }}"
    openrc: /tmp/rcfile

- name: update {{ openrc }} with Dev environments
  shell: |
    echo '' >> {{ openrc }} && \
    echo 'export OS_USERNAME=Dev' >> {{ openrc }} && \
    echo 'export OS_PASSWORD=default' >> {{ openrc }} && \
    echo 'export OS_PROJECT_NAME=Dev' >> {{ openrc }}

- name: "Create 2 non-share networks: test-net-a, test-net-b"
  shell: |
    source {{ openrc }} 
    openstack network show {{ item.name }}
    if [ $? -ne 0 ];  then
      openstack network create {{ item.name }} --project=Dev --provider-network-type=vlan && \
      openstack subnet create {{ item.subnet_name }} --network {{ item.name }} --subnet-range {{ item.subnet_range }}
    fi  
  with_items:
    - {"name": "test-net-a", "subnet_range": "10.250.101.0/24", "subnet_name": "test-subnet-a"}
    - {"name": "test-net-b", "subnet_range": "10.250.102.0/24", "subnet_name": "test-subnet-b"}
  loop_control:
    label: "create {{ item.name }}"
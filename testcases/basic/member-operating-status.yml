- name: set timestamp variable
  shell: echo $$-`date +%s`
  register: test_timestamp
  delegate_to: localhost

- name: set member name
  set_fact:
    test_member: test-mb-{{ test_timestamp.stdout }}

- name: "{{ testcasename }}: create an offline member under pool {{ pool }}"
  shell: |
    source {{ openrc }} && \
      bash /tmp/scripts/wait_assert_lb_active.sh {{ loadbalancer }} && \
      neutron --debug lbaas-member-create --subnet {{ hostvars[item].subnet }} \ 
      --address 10.250.100.255 --protocol-port {{ member_tcpport }} {{ pool }} --name {{ test_member }}
  with_items:
    - "{{ hostvars[inventory_hostname]['groups']['pool1'] }}"
  loop_control:
    index_var: index
  when: "index == 0"
  register: test_processes

- import_tasks: ./playbooks/task-neutron-db-info.yml

- name: check until the new added member's operating_status changes to offline
  community.mysql.mysql_query:
    login_host: "{{ neutron_db_info.results[2].stdout }}"
    login_user: "{{ neutron_db_info.results[0].stdout }}"
    login_password: "{{ neutron_db_info.results[1].stdout }}"
    login_db: "{{ neutron_db_info.results[3].stdout }}"
    query: select operating_status from lbaas_members where name = '{{ test_member }}'
  register: op_status
  delay: 10
  retries: 120
  until: "'OFFLINE' in '{{ op_status.query_result | \
    flatten | map(attribute='operating_status',default=' ') | list | join(' ') }}'"
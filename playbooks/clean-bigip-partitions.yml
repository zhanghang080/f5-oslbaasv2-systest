---

- hosts: bigips
  gather_facts: False
  remote_user: root
  tasks:
    - name: check bigips be reachable
      ping:
      delegate_to: localhost
    
    # Use f5networks.f5_modules.bigip_device_info to handle the issue of: ValueError: invalid value for masklen when ipv6
    # Update f5networks.f5_modules collection: 
      # $ ansible-galaxy collection install f5networks.f5_modules
      # Process install dependency map
      # Starting collection install process
      # Installing 'f5networks.f5_modules:1.8.0' to '~/.ansible/collections/ansible_collections/f5networks/f5_modules'
      # Installing 'ansible.netcommon:1.5.0' to '~/.ansible/collections/ansible_collections/ansible/netcommon'
    # This can handle the issue of: ValueError: invalid value for masklen
    # It's caused by IPV6 self-ip on bigips.
    # Reported from ansible/modules/network/f5/bigip_device_info.py: def netmask(self)
    # ansible/modules/network/f5/bigip_device_info.py\", line 12355, in netmask\r\n
    - name: collect bigip information from partitions
      f5networks.f5_modules.bigip_device_info:
        gather_subset:
          - partitions
          - self-ips
          - vlans
        provider:
          user: admin
          server: "{{ inventory_hostname }}"
          password: "{{ admin_password }}"
          validate_certs: False
      register: bigip_infos
      tags: getbigipinfo

    # - name: show all partitions
    #   debug: var=bigip_infos
    #   run_once: true
    #   tags: getbigipinfo

    - name: remove objects under partitions
      file: path=/config/partitions/{{ item.name }} state=absent
      with_items: "{{bigip_infos.partitions}}"
      when: item.name != 'Common'
    
    # In some case: 
    #   01070523:3: No Vlan association for STP Interface Member 1.1.
    #   Unexpected Error: Loading configuration process failed.
    # use:
    #   $ tmsh load /sys config default
    #   $ tmsh save /sys config partitions all
    # but, thereafter, we need to reprovision the bigip, no licensing needed.

    - name: executing tmsh load sys config
      shell: tmsh load sys config

    - name: delete partitions
      bigip_partition:
        name: "{{item.name}}"
        state: absent
        provider:
          user: admin
          server: "{{ inventory_hostname }}"
          password: "{{ admin_password }}"
          validate_certs: False
      with_items: "{{bigip_infos.partitions}}"
      loop_control:
        label: "{{ item.name }}"
      when: item.name != "Common"

    - name: delete self-ips
      bigip_selfip:
        name: "{{ item.name }}"
        state: absent
        provider:
          user: admin
          server: "{{ inventory_hostname }}"
          password: "{{ admin_password }}"
          validate_certs: False
      with_items: "{{ bigip_infos.self_ips }}"
      loop_control:
        label: "{{ item.name }}"
      when: item.full_path != '/Common/vtep' and (item.name | regex_search('^.*[0-9a-f\-]{36}$'))

    - name: delete vlans
      bigip_vlan:
        name: "{{ item.name }}"
        state: absent
        provider:
          user: admin
          server: "{{ inventory_hostname }}"
          password: "{{ admin_password }}"
          validate_certs: False
      with_items: "{{ bigip_infos.vlans }}"
      loop_control:
        label: "{{ item.name }}"
      when: (item.description | default('') | regex_search('^[0-9a-f\-]{36}$'))

# TODO: clear certificates and kinds of profiles under Common
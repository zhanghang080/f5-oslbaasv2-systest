- name: copy certificate files to remote host for barbican operation
  copy: src="../conf.d/kps" dest="/tmp" force="yes"

- name: set certs generation timestamp
  shell: date +%s
  delegate_to: localhost
  register: certs_timestamp

- set_fact:
    server_key_name: "{{ certs_timestamp.stdout }}.server.key"
    server_crt_name: "{{ certs_timestamp.stdout }}.server.crt"
    ca_crt_name: "{{ certs_timestamp.stdout }}.ca.crt"

- name: create barbican server secrets
  shell: |
    source {{ openrc }} && {{ item }}
  with_items:
    - barbican secret store --name {{ server_key_name }} --payload "`cat /tmp/kps/server.key`" --secret-type private --payload-content-type "text/plain" --format value --column "Secret href" --os-project-id {{ os_project_id }}
    - barbican secret store --name {{ server_crt_name }} --payload "`cat /tmp/kps/server.crt`" --secret-type certificate --payload-content-type "text/plain" --format value --column "Secret href" --os-project-id {{ os_project_id }}
  register: server_secret_href

- debug: msg="{{ server_secret_href.results[item].stdout }}"
  with_items: "{{ range(0, server_secret_href.results | length, 1) | list }}"

- set_fact:
    server_key_href: "{{ server_secret_href.results[0].stdout }}"
    server_crt_href: "{{ server_secret_href.results[1].stdout }}"

- name: create barbican server secret container
  shell: |
    source {{ openrc }} && barbican secret container create --name server.kps.{{ certs_timestamp.stdout }}.container --type certificate --secret private_key={{ server_key_href }} --secret certificate={{ server_crt_href }} --format value --column "Container href" --os-project-id {{ os_project_id }}
  with_items:
    - "{{ range(0, 2, 1) | list }}"
  register: server_containers_href

- debug: msg="{{ server_containers_href.results[item].stdout }}"
  with_items: "{{ range(0, server_containers_href.results | length, 1) | list }}"

- set_fact:
    server_container1_href: "{{ server_containers_href.results[0].stdout }}"
    server_container2_href: "{{ server_containers_href.results[1].stdout }}"

- name: create barbican CA secret
  shell: |
    source {{ openrc }} && {{ item }}
  with_items:
    - barbican secret store --name {{ ca_crt_name }} --payload "`cat /tmp/kps/ca.crt`" --secret-type certificate --payload-content-type "text/plain" --format value --column "Secret href" --os-project-id {{ os_project_id }}
  register: ca_secret_href

- debug: msg="{{ ca_secret_href.results[item].stdout }}"
  with_items: "{{ range(0, ca_secret_href.results | length, 1) | list }}"

- set_fact:
    ca_crt_href: "{{ ca_secret_href.results[0].stdout }}"

- name: create barbican ca secret container
  shell: |
    source {{ openrc }} && {{ item }}
  with_items:
    - barbican secret container create --name ca.crt.{{ certs_timestamp.stdout }}.container --type certificate --secret certificate={{ ca_crt_href }} --format value --column "Container href" --os-project-id {{ os_project_id }}
  register: ca_container_href

- debug: msg="{{ ca_container_href.results[item].stdout }}"
  with_items: "{{ range(0, ca_container_href.results | length, 1) | list }}"

- set_fact:
    ca_container_href: "{{ ca_container_href.results[0].stdout }}"